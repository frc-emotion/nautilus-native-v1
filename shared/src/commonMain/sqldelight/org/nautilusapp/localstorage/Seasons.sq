import kotlin.Int;

CREATE TABLE competition_table (
    name TEXT NOT NULL,
    year INTEGER AS Int NOT NULL,
    PRIMARY KEY (name, year),
    FOREIGN KEY (year) REFERENCES season_table (year)
);

CREATE TABLE season_table (
    year INTEGER AS Int NOT NULL PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE attendance_periods_table (
    name TEXT NOT NULL,
    year INTEGER AS Int NOT NULL,
    FOREIGN KEY (year) REFERENCES season_table (year),
    PRIMARY KEY (name, year)
);

insertCompetition:
INSERT OR IGNORE INTO competition_table (name, year) VALUES (?, ?);

insertSeason:
INSERT OR IGNORE INTO season_table (year, name) VALUES (?, ?);

insertAttendancePeriod:
INSERT OR IGNORE INTO attendance_periods_table (name, year) VALUES (?, ?);

getAllCompetitions:
SELECT name, year FROM competition_table;

getAllSeasons:
SELECT season_table.*,
    group_concat(competition_table.name) AS competitions,
    group_concat(attendance_periods_table.name) AS attendance_periods
    FROM season_table
    LEFT OUTER JOIN competition_table
        ON season_table.year = competition_table.year
    LEFT OUTER JOIN attendance_periods_table
        ON season_table.year = attendance_periods_table.year
    GROUP BY season_table.year
    ORDER BY season_table.year DESC;

getCompetitionsByYear:
SELECT name, year FROM competition_table WHERE year = ?;

deleteAllSeasons {
--     BEGIN TRANSACTION;
    DELETE FROM attendance_periods_table;
    DELETE FROM competition_table;
    DELETE FROM season_table;
--     COMMIT;
}

deleteSeason {
--     BEGIN TRANSACTION;
    DELETE FROM attendance_periods_table WHERE year = :season;
    DELETE FROM competition_table WHERE year = :season;
    DELETE FROM season_table WHERE year = :season;
--     COMMIT;
}

getAttendancePeriods:
SELECT name FROM attendance_periods_table;