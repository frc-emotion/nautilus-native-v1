import kotlin.Boolean;
import kotlin.Int;

CREATE TABLE crescendo_upload_table (
    competition TEXT NOT NULL,
    teamNumber INTEGER AS Int NOT NULL,
    matchNumber INTEGER AS Int NOT NULL,
    score INTEGER AS Int NOT NULL,
    penalty INTEGER AS Int NOT NULL,
    won INTEGER AS Boolean NOT NULL,
    tie INTEGER AS Boolean NOT NULL,
    comments TEXT NOT NULL,
    defensive INTEGER AS Boolean NOT NULL,
    brokeDown INTEGER AS Boolean NOT NULL,
    rankingPoints INTEGER AS Int NOT NULL,
    autoLeave INTEGER AS Boolean NOT NULL,
    auto_attempted INTEGER AS Int NOT NULL,
    auto_scored INTEGER AS Int NOT NULL,
    teleopAmp INTEGER AS Int NOT NULL,
    teleopSpeakerUnamp INTEGER AS Int NOT NULL,
    teleopSpeakerAmp INTEGER AS Int NOT NULL,
    stageState TEXT NOT NULL,
    harmony INTEGER AS Int NOT NULL,
    trap INTEGER AS Boolean NOT NULL,
    melody INTEGER AS Boolean NOT NULL,
    ensemble INTEGER AS Boolean NOT NULL,
    _id INTEGER PRIMARY KEY,
    rating REAL NOT NULL,
    defense_rating REAL NOT NULL,
    human_source INTEGER AS Boolean NOT NULL,
    coop INTEGER AS Boolean NOT NULL,
    human_skill REAL NOT NULL
);

insert {
-- BEGIN TRANSACTION;
DELETE FROM crescendo_upload_table WHERE competition = :competition AND teamNumber = :teamNumber AND matchNumber = :matchNumber;
INSERT OR IGNORE INTO crescendo_upload_table (competition, teamNumber, matchNumber, score, penalty, won, tie, comments, defensive, brokeDown, rankingPoints, autoLeave, auto_attempted, auto_scored, teleopAmp, teleopSpeakerUnamp, teleopSpeakerAmp, stageState, harmony, trap, melody, ensemble, rating, defense_rating, human_source, coop, human_skill)
VALUES (:competition, :teamNumber, :matchNumber, :score, :penalty, :won, :tie, :comments, :defensive, :brokeDown, :rankingPoints, :autoLeave, :auto_attempted, :auto_scored, :teleopAmp, :teleopSpeakerUnamp, :teleopSpeakerAmp, :stageState, :harmony, :trap, :melody, :ensemble, :rating, :defense_rating, :human_source, :coop, :human_skill);
-- COMMIT;
}

getAll:
SELECT * FROM crescendo_upload_table;

get:
SELECT * FROM crescendo_upload_table WHERE _id = ?;

delete:
DELETE FROM crescendo_upload_table WHERE _id = ?;

deleteAll:
DELETE FROM crescendo_upload_table;

getLength:
SELECT COUNT(_id) FROM crescendo_upload_table;